# This file was autogenerated by uv via the following command:
#    uv pip compile requirements/requirements-dev.in pyproject.toml --universal --python=3.9
alabaster==0.7.16 ; python_full_version < '3.10'
    # via sphinx
alabaster==1.0.0 ; python_full_version >= '3.10'
    # via sphinx
astroid==3.3.10
    # via pylint
babel==2.17.0
    # via sphinx
backports-tarfile==1.2.0 ; python_full_version < '3.12' and platform_machine != 'ppc64le' and platform_machine != 's390x'
    # via jaraco-context
bandit==1.6.0
    # via -r requirements/requirements-dev.in
bcrypt==4.3.0
    # via paramiko
build==1.2.2.post1
    # via -r requirements/requirements-dev.in
cachetools==6.1.0
    # via tox
certifi==2025.6.15
    # via requests
cffi==1.17.1
    # via
    #   cryptography
    #   pynacl
chardet==5.2.0
    # via tox
charset-normalizer==3.4.2
    # via requests
colorama==0.4.6
    # via
    #   bandit
    #   build
    #   pylint
    #   pytest
    #   sphinx
    #   tox
coverage==7.9.1
    # via -r requirements/requirements-dev.in
cryptography==45.0.5
    # via
    #   paramiko
    #   secretstorage
dill==0.4.0
    # via pylint
distlib==0.3.9
    # via virtualenv
docutils==0.21.2
    # via
    #   readme-renderer
    #   sphinx
exceptiongroup==1.3.0 ; python_full_version < '3.11'
    # via pytest
filelock==3.18.0
    # via
    #   tox
    #   virtualenv
flake8==7.3.0
    # via -r requirements/requirements-dev.in
gitdb==4.0.12
    # via gitpython
gitpython==3.1.44
    # via bandit
id==1.5.0
    # via twine
idna==3.10
    # via requests
imagesize==1.4.1
    # via sphinx
importlib-metadata==8.7.0 ; (python_full_version < '3.10.2' and platform_machine == 'ppc64le') or (python_full_version < '3.10.2' and platform_machine == 's390x') or (python_full_version < '3.12' and platform_machine != 'ppc64le' and platform_machine != 's390x')
    # via
    #   build
    #   keyring
    #   sphinx
    #   twine
iniconfig==2.1.0
    # via pytest
isort==6.0.1
    # via pylint
jaraco-classes==3.4.0 ; platform_machine != 'ppc64le' and platform_machine != 's390x'
    # via keyring
jaraco-context==6.0.1 ; platform_machine != 'ppc64le' and platform_machine != 's390x'
    # via keyring
jaraco-functools==4.2.1 ; platform_machine != 'ppc64le' and platform_machine != 's390x'
    # via keyring
jeepney==0.9.0 ; platform_machine != 'ppc64le' and platform_machine != 's390x' and sys_platform == 'linux'
    # via
    #   keyring
    #   secretstorage
jinja2==3.1.6
    # via sphinx
keyring==25.6.0 ; platform_machine != 'ppc64le' and platform_machine != 's390x'
    # via twine
lxml==6.0.0
    # via -r requirements/requirements-dev.in
markdown-it-py==3.0.0
    # via rich
markupsafe==3.0.2
    # via jinja2
mccabe==0.7.0
    # via
    #   flake8
    #   pylint
mdurl==0.1.2
    # via markdown-it-py
more-itertools==10.7.0 ; platform_machine != 'ppc64le' and platform_machine != 's390x'
    # via
    #   jaraco-classes
    #   jaraco-functools
mypy==1.16.1
    # via -r requirements/requirements-dev.in
mypy-extensions==1.1.0
    # via mypy
nh3==0.2.21
    # via readme-renderer
packaging==25.0
    # via
    #   build
    #   pyproject-api
    #   pytest
    #   sphinx
    #   tox
    #   twine
paramiko==3.5.1
    # via -r requirements/requirements-dev.in
pathspec==0.12.1
    # via mypy
pbr==6.1.1
    # via stevedore
platformdirs==4.3.8
    # via
    #   pylint
    #   tox
    #   virtualenv
pluggy==1.6.0
    # via
    #   pytest
    #   tox
pycodestyle==2.14.0
    # via flake8
pycparser==2.22
    # via cffi
pydocstyle==6.3.0
    # via -r requirements/requirements-dev.in
pyflakes==3.4.0
    # via flake8
pygments==2.19.2
    # via
    #   pytest
    #   readme-renderer
    #   rich
    #   sphinx
pykdu-compress==0.1.10
    # via
    #   -r requirements/requirements-dev.in
    #   uiucprescon-images (pyproject.toml)
pylint==3.3.7
    # via -r requirements/requirements-dev.in
pynacl==1.5.0
    # via paramiko
pyproject-api==1.9.1
    # via tox
pyproject-hooks==1.2.0
    # via build
pytest==8.4.1
    # via -r requirements/requirements-dev.in
pywin32-ctypes==0.2.3 ; platform_machine != 'ppc64le' and platform_machine != 's390x' and sys_platform == 'win32'
    # via keyring
pyyaml==6.0.2
    # via bandit
readme-renderer==44.0
    # via twine
requests==2.32.4
    # via
    #   id
    #   requests-toolbelt
    #   sphinx
    #   twine
requests-toolbelt==1.0.0
    # via twine
rfc3986==2.0.0
    # via twine
rich==14.0.0
    # via twine
roman-numerals-py==3.1.0 ; python_full_version >= '3.11'
    # via sphinx
secretstorage==3.3.3 ; platform_machine != 'ppc64le' and platform_machine != 's390x' and sys_platform == 'linux'
    # via keyring
setuptools==80.9.0
    # via pbr
six==1.17.0
    # via bandit
smmap==5.0.2
    # via gitdb
snowballstemmer==3.0.1
    # via
    #   pydocstyle
    #   sphinx
sphinx==7.4.7 ; python_full_version < '3.10'
    # via -r requirements/requirements-dev.in
sphinx==8.1.3 ; python_full_version == '3.10.*'
    # via -r requirements/requirements-dev.in
sphinx==8.2.3 ; python_full_version >= '3.11'
    # via -r requirements/requirements-dev.in
sphinxcontrib-applehelp==2.0.0
    # via sphinx
sphinxcontrib-devhelp==2.0.0
    # via sphinx
sphinxcontrib-htmlhelp==2.1.0
    # via sphinx
sphinxcontrib-jsmath==1.0.1
    # via sphinx
sphinxcontrib-qthelp==2.0.0
    # via sphinx
sphinxcontrib-serializinghtml==2.0.0
    # via sphinx
stevedore==5.4.1
    # via bandit
tomli==2.2.1 ; python_full_version < '3.11'
    # via
    #   build
    #   mypy
    #   pylint
    #   pyproject-api
    #   pytest
    #   sphinx
    #   tox
tomlkit==0.13.3
    # via pylint
tox==4.27.0
    # via -r requirements/requirements-dev.in
twine==6.1.0
    # via -r requirements/requirements-dev.in
typing-extensions==4.14.0
    # via
    #   astroid
    #   exceptiongroup
    #   mypy
    #   pylint
    #   rich
    #   tox
urllib3==2.5.0
    # via
    #   requests
    #   twine
virtualenv==20.31.2
    # via tox
zipp==3.23.0 ; (python_full_version < '3.10.2' and platform_machine == 'ppc64le') or (python_full_version < '3.10.2' and platform_machine == 's390x') or (python_full_version < '3.12' and platform_machine != 'ppc64le' and platform_machine != 's390x')
    # via importlib-metadata
