[build-system]
requires = ["setuptools>=77.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "uiucprescon.images"
version = "0.0.6.dev"
dependencies = [
    "pykdu_compress>=0.1.7"
    ]
requires-python = ">=3.9"
readme = "README.rst"
license = "NCSA"
license-files = ["LICENSE"]
authors = [
    {name = "University Library at The University of Illinois at Urbana Champaign: Preservation Services", email = "prescons@library.illinois.edu"},
]
maintainers = [
    {name = "Henry Borchers", email = "hborcher@illinois.edu"}
]
description = "Process image files"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Documentation = "https://www.library.illinois.edu/dccdocs/uiucprescon.images"
Download = "https://github.com/UIUCLibrary/uiucprescon.images"

[tool.setuptools]
zip-safe = false
packages=["uiucprescon.images"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"uiucprescon.images" = ["py.typed"]

[tool.cibuildwheel]
test-requires = [
    "pytest",
]
test-command = [
    "pytest {package}/tests"
]
build-frontend = "build"
skip = [
    "cp36-*",
    "cp37-macosx_*",
    "cp311-*",
    "pp*",
    "*-win32",
    "*-musllinux*",
    "*-manylinux_i686"
]
environment-pass = ["CONAN_COMPILER_LIBCXX", "CONAN_COMPILER_VERSION", "CONAN_USER_HOME"]

[tool.cibuildwheel.macos]

before-all = [
    "python3 -m venv /tmp/conan/venv",
    "/tmp/conan/venv/bin/python -m pip install wheel",
    "/tmp/conan/venv/bin/python -m pip install 'conan>=1.53' cmake",
    "/tmp/conan/venv/bin/conan profile new $ENVTMPDIR/.conan/profiles/default --detect --force",
    "if [ -z \"$CONAN_COMPILER_VERSION\" ]; then : ; else /tmp/conan/venv/bin/conan profile update settings.compiler.version=$CONAN_COMPILER_VERSION default; fi",
    ". /tmp/conan/venv/bin/activate && conan install ./ --build missing --install-folder=$CONAN_BUILD_INFO_DIR"
]
[tool.cibuildwheel.macos.environment]
ENVTMPDIR="/tmp/conan"
CONAN_USER_HOME="/tmp/conan"
CONAN_DEFAULT_PROFILE_PATH="/tmp/conan/.conan/profiles/default"
CONAN_BUILD_INFO_DIR="/tmp/conan/build/"

[tool.cibuildwheel.windows]
before-all = [
    "pip install wheel",
    "pip install conan cmake ninja",
    "conan profile new default --detect --force",
    "conan profile update settings.compiler.version=%CONAN_COMPILER_VERSION% default",
    "conan install ./ --build missing",
]
[tool.cibuildwheel.windows.environment]
CONAN_USER_HOME="$TEMP/conan"

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "manylinux2014"
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"
before-all = [
    "cc --version", "cc -dumpfullversion -dumpversion",
    "pip3 install conan cmake ninja",
    "conan profile new /tmp/conan/.conan/profiles/default --detect",
    "if [ -z \"$CONAN_COMPILER_LIBCXX\" ]; then : ; else conan profile update settings.compiler.libcxx=$CONAN_COMPILER_LIBCXX default; fi",
    "if [ -z \"$CONAN_COMPILER_VERSION\" ]; then : ; else conan profile update settings.compiler.version=$CONAN_COMPILER_VERSION default; fi",
    "conan profile show default",
    "conan install ./ --build missing",

]
[tool.cibuildwheel.linux.environment]
CONAN_USER_HOME="/tmp/conan"
CONAN_DEFAULT_PROFILE_PATH="/tmp/conan/.conan/profiles/default"
CONAN_BUILD_INFO_DIR="/tmp/conan/build/"
PYTHONFAULTHANDLER="True"

[tool.pytest.ini_options]
addopts = "--verbose -s"
testpaths = [
    "tests"
]
pythonpath = "src"
junit_family = "xunit1"


[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
include =[
    "src/*"
]

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { file = "requirements-dev.txt" }]
